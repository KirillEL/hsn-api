"""init_tables

Revision ID: 1b55cbe4aa9c
Revises: 
Create Date: 2024-02-16 06:02:23.761074

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '1b55cbe4aa9c'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contragents',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('phone_number', sa.Text(), nullable=False),
    sa.Column('snils', sa.Text(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('mis_number', sa.Text(), nullable=False),
    sa.Column('date_birth', sa.Text(), nullable=False),
    sa.Column('relative_phone_number', sa.Text(), nullable=False),
    sa.Column('parent', sa.Text(), nullable=True),
    sa.Column('date_dead', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('snils'),
    schema='public'
    )
    op.create_table('diagnoses_catalog',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('med_organizations',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('address', sa.Text(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number'),
    schema='public'
    )
    op.create_table('medicines_group',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('code'),
    schema='public'
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('login', sa.String(length=255), nullable=False),
    sa.Column('password', sa.String(length=255), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=True),
    sa.Column('role', postgresql.ENUM('ADMIN', 'DOCTOR', name='role'), server_default=sa.text("'DOCTOR'"), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login'),
    schema='public'
    )
    op.create_table('cabinets',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=200), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('med_id', sa.BigInteger(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['med_id'], ['public.med_organizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('doctors',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('patronymic', sa.String(length=100), nullable=False),
    sa.Column('phone_number', sa.BigInteger(), nullable=False),
    sa.Column('user_id', sa.BigInteger(), nullable=False),
    sa.Column('cabinet_id', sa.BigInteger(), nullable=True),
    sa.Column('is_glav', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cabinet_id'], ['public.cabinets.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('phone_number'),
    sa.UniqueConstraint('user_id'),
    schema='public'
    )
    op.create_table('patients',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('patronymic', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.String(length=1), nullable=False),
    sa.Column('height', sa.Integer(), nullable=False),
    sa.Column('main_diagnose', sa.Text(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('disability', postgresql.ENUM('NO_DISABILITY', 'FIRST_DISABILITY', 'SECOND_DISABILITY', 'THIRD_DISABILITY', name='disability'), server_default=sa.text("'NO_DISABILITY'"), nullable=False),
    sa.Column('date_setup_diagnose', sa.DateTime(), nullable=True),
    sa.Column('school_hsn_date', sa.DateTime(), nullable=True),
    sa.Column('have_hospitalization', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('count_hospitalizations', sa.Integer(), nullable=False),
    sa.Column('lgota_drugs', postgresql.ENUM('NO_LGOTA', 'LGOTA', 'LGOTA_MONEY', name='lgota_drugs'), server_default=sa.text("'NO_LGOTA'"), nullable=False),
    sa.Column('last_hospitalization_id', sa.BigInteger(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('has_chronic_heart', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('classification_func_classes', postgresql.ENUM('FK1', 'FK2', 'FK3', 'FK4', name='classification_func_classes'), server_default=sa.text("'FK1'"), nullable=True),
    sa.Column('has_stenocardia', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_arteria_hypertension', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('arteria_hypertension_age', sa.Integer(), nullable=True),
    sa.Column('cabinet_id', sa.BigInteger(), nullable=False),
    sa.Column('contragent_id', sa.BigInteger(), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cabinet_id'], ['public.cabinets.id'], ),
    sa.ForeignKeyConstraint(['contragent_id'], ['public.contragents.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contragent_id'),
    schema='public'
    )
    op.create_table('patient_appointments',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.BigInteger(), nullable=True),
    sa.Column('doctor_id', sa.BigInteger(), nullable=True),
    sa.Column('cabinet_id', sa.BigInteger(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('date_next', sa.DateTime(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=False),
    sa.Column('height', sa.Float(), nullable=False),
    sa.Column('fv_lg', sa.Integer(), nullable=False),
    sa.Column('main_diagnose', sa.Text(), nullable=False),
    sa.Column('sistol_ad', sa.Float(), nullable=False),
    sa.Column('diastal_ad', sa.Float(), nullable=False),
    sa.Column('hss', sa.Integer(), nullable=False),
    sa.Column('mit', sa.Float(), nullable=True),
    sa.Column('has_fatigue', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_dyspnea', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_swelling_legs', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_weakness', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_orthopnea', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_heartbeat', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['cabinet_id'], ['public.cabinets.id'], ),
    sa.ForeignKeyConstraint(['doctor_id'], ['public.doctors.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['public.patients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('patient_hospitalizations',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('patient_id', sa.BigInteger(), nullable=True),
    sa.Column('date_start', sa.DateTime(), nullable=False),
    sa.Column('date_end', sa.DateTime(), nullable=False),
    sa.Column('anamnes', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['patient_id'], ['public.patients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('analyses',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('count_index', sa.Integer(), nullable=False),
    sa.Column('patient_hospitalization_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['patient_hospitalization_id'], ['public.patient_hospitalizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('clinical_assesments',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('has_dyspnea', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('distance_walking_6_minutes', postgresql.ENUM('LOW', 'LOW_MEDIUM', 'MEDIUM', 'HIGH', name='distance_walking_type'), nullable=False),
    sa.Column('has_orthopnea', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_night_dyspnea', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_decreased_exercise_tolerance', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_weakness', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_increased_anknes', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_night_cough', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_weight_gain', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_lose_weight', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_depression', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_increased_central_venous_pressure', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_heartbeat', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('has_hepatojugular_reflux', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_third_ton', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_displacement_of_the_apical', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_peripheral_edema', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_moist_rales', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_heart_murmur', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_tachycardia', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_irregular_pulse', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_tachypnea', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_hepatomegaly', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_ascites', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('has_cachexia', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('patient_appointment_id', sa.BigInteger(), nullable=False),
    sa.Column('patient_hospitalization_id', sa.BigInteger(), nullable=False),
    sa.Column('patient_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['patient_appointment_id'], ['public.patient_appointments.id'], ),
    sa.ForeignKeyConstraint(['patient_hospitalization_id'], ['public.patient_hospitalizations.id'], ),
    sa.ForeignKeyConstraint(['patient_id'], ['public.patients.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('medicines_prescription',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('medicine_group_id', sa.BigInteger(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('patient_appointment_id', sa.BigInteger(), nullable=False),
    sa.Column('patient_hospitalization_id', sa.BigInteger(), nullable=False),
    sa.Column('mnn', sa.String(length=200), nullable=True),
    sa.Column('dosa', sa.Integer(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['medicine_group_id'], ['public.medicines_group.id'], ),
    sa.ForeignKeyConstraint(['patient_appointment_id'], ['public.patient_appointments.id'], ),
    sa.ForeignKeyConstraint(['patient_hospitalization_id'], ['public.patient_hospitalizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('researchs',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('analyses_id', sa.BigInteger(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('patient_appointment_id', sa.BigInteger(), nullable=False),
    sa.Column('patient_hospitalization_id', sa.BigInteger(), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['analyses_id'], ['public.analyses.id'], ),
    sa.ForeignKeyConstraint(['patient_appointment_id'], ['public.patient_appointments.id'], ),
    sa.ForeignKeyConstraint(['patient_hospitalization_id'], ['public.patient_hospitalizations.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_table('supplied_diagnoses',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('patient_appointment_id', sa.BigInteger(), nullable=False),
    sa.Column('diagnose_catalog_id', sa.BigInteger(), nullable=False),
    sa.Column('medicine_prescription_id', sa.BigInteger(), nullable=False),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('is_deleted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('updated_by', sa.Integer(), nullable=True),
    sa.Column('deleted_by', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['diagnose_catalog_id'], ['public.diagnoses_catalog.id'], ),
    sa.ForeignKeyConstraint(['medicine_prescription_id'], ['public.medicines_prescription.id'], ),
    sa.ForeignKeyConstraint(['patient_appointment_id'], ['public.patient_appointments.id'], ),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('supplied_diagnoses', schema='public')
    op.drop_table('researchs', schema='public')
    op.drop_table('medicines_prescription', schema='public')
    op.drop_table('clinical_assesments', schema='public')
    op.drop_table('analyses', schema='public')
    op.drop_table('patient_hospitalizations', schema='public')
    op.drop_table('patient_appointments', schema='public')
    op.drop_table('patients', schema='public')
    op.drop_table('doctors', schema='public')
    op.drop_table('cabinets', schema='public')
    op.drop_table('users', schema='public')
    op.drop_table('medicines_group', schema='public')
    op.drop_table('med_organizations', schema='public')
    op.drop_table('diagnoses_catalog', schema='public')
    op.drop_table('contragents', schema='public')
    # ### end Alembic commands ###
