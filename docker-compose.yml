version: '3.7'

services:
  #hsn_nginx:
  #build:
  # context: .nginx/
  #dockerfile: Dockerfile
  #container_name: hsn_nginx
  #ports:
  #  - "1111:1111"
  # restart: on-failure
  # networks:
  #   - hsn_network

  hsn_api:
    build:
      context: .
      dockerfile: .docker/api/Dockerfile
    container_name: hsn_api
    hostname: hsn_api
    command: /bin/sh -c "alembic upgrade head && uvicorn api.api_server:app --host 0.0.0.0 --port 9999 --reload"
    tty: true
    restart: on-failure
    ports:
      - "9999:9999"
    environment:
      DEBUG: '${DEBUG}'
    networks:
      - hsn_network
    depends_on:
      - database
    volumes:
      - '.:/app'

  database:
    image: postgres
    container_name: database
    hostname: database
    tty: true
    environment:
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
      POSTGRES_USER: '${DB_USER}'
      POSTGRES_DB: '${DB_NAME}'
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - '5432:5432'
    restart: always
    healthcheck:
      test: pg_isready -U postgres
      interval: 2s
      timeout: 3s
      retries: 40
    networks:
      - hsn_network

  pgadmin:
    container_name: local_pgadmin
    image: dpage/pgadmin4:6.19
    depends_on:
      - database
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - hsn_network
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis_service
    ports:
      - "6379:6379"
    restart: always
    networks:
      - hsn_network


networks:
  hsn_network:
    driver: 'bridge'

volumes:
  db-data:
    name: db-data
  pgadmin-data:
    name: pgadmin-data
